#include <iostream> // Подключаем библиотеку для ввода-вывода
#include <bitset>   // Подключаем библиотеку для работы с битовыми наборами

using namespace std; // Используем пространство имен std для упрощения записи

int main() { // Начало основной функции
    unsigned int num = 255; // Инициализируем переменную num значением 255 (в двоичном виде: 11111111)
    
    cout << bitset<8>(num) << endl; // Выводим побитовое представление числа num в 8-битном формате

    num = num & 126; // Применяем побитовое И с числом 126 (в двоичном виде: 01111110), обнуляя старший бит
    cout << bitset<8>(num) << endl; // Выводим новое побитовое представление числа num

    num = num & ~(1 << 1); // Обнуляем второй бит (считая справа) числа num, используя побитовую инверсию и И
    num = num & ~(1 << 6); // Обнуляем седьмой бит числа num, используя побитовую инверсию и И
    cout << bitset<8>(num) << endl; // Выводим новое побитовое представление числа num

    num = num ^ (1 << 2); // Инвертируем третий бит числа num (побитовая операция XOR)
    num = num ^ (1 << 5); // Инвертируем шестой бит числа num (побитовая операция XOR)
    cout << bitset<8>(num) << endl; // Выводим новое побитовое представление числа num

    cout << bitset<8>(num * 0) << endl; // Выводим побитовое представление результата умножения num на 0 (всегда будет 0)

    return 0; // Завершаем программу с кодом возврата 0
}