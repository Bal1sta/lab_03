name: CI/CD for C++ on Ubuntu and macOS

on:
  push:
    tags:
      - "v*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up C++ environment
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake
          elif [ "${{ runner.os }}" == "macOS" ]; then
            brew install cmake
          fi

      - name: Configure project
        run: |
          cmake -S . -B build

      - name: Build project
        run: |
          cmake --build build

      - name: Run tests
        run: |
          cd build && ctest

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up C++ environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake

      - name: Build project
        run: |
          cmake -S . -B build
          cmake --build build

      - name: Package project
        run: |
          cd build && cpack

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: build/*.tar.gz
          asset_name: ${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip